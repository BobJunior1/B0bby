-- Initialize Services and Variables
local TweenService = game:GetService("TweenService")
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local SoundService = game:GetService("SoundService")
local camera = workspace.CurrentCamera
local player = Players.LocalPlayer

-- Create the ScreenGui
local screenGui = Instance.new("ScreenGui")
screenGui.IgnoreGuiInset = true
screenGui.ResetOnSpawn = false
screenGui.Parent = player:WaitForChild("PlayerGui")

-- Create the Black Frame
local blackFrame = Instance.new("Frame", screenGui)
blackFrame.Size = UDim2.new(1, 0, 1, 0)
blackFrame.BackgroundColor3 = Color3.new(0, 0, 0)
blackFrame.BackgroundTransparency = 1
blackFrame.ResetOnSpawn = false

-- Create the Message Label
local messageLabel = Instance.new("TextLabel", blackFrame)
messageLabel.Size = UDim2.new(1, 0, 1, 0)
messageLabel.TextColor3 = Color3.new(1, 1, 1)
messageLabel.TextScaled = true
messageLabel.BackgroundTransparency = 1
messageLabel.TextTransparency = 1
messageLabel.ResetOnSpawn = false

local messages = {
    "You really thought..",
    "Can you feel that?",
    "It's coming."
}

local colors = {
    Color3.new(1, 1, 1),
    Color3.new(1, 1, 1),
    Color3.new(1, 0, 0)
}

local function fadeIn(index)
    messageLabel.Text = messages[index]
    messageLabel.TextColor3 = colors[index]
    local tweenInfo = TweenInfo.new(2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
    local tween1 = TweenService:Create(blackFrame, tweenInfo, {BackgroundTransparency = 0})
    local tween2 = TweenService:Create(messageLabel, tweenInfo, {TextTransparency = 0})
    tween1:Play()
    tween2:Play()
    wait(2)
end

local function fadeOut()
    local tweenInfo = TweenInfo.new(2, Enum.EasingStyle.Quad, Enum.EasingDirection.In)
    local tween1 = TweenService:Create(blackFrame, tweenInfo, {BackgroundTransparency = 0})
    local tween2 = TweenService:Create(messageLabel, tweenInfo, {TextTransparency = 1})
    tween1:Play()
    tween2:Play()
    wait(2)
end

local function fadeOutBackground()
    local tweenInfo = TweenInfo.new(2, Enum.EasingStyle.Quad, Enum.EasingDirection.In)
    local tween = TweenService:Create(blackFrame, tweenInfo, {BackgroundTransparency = 1})
    tween:Play()
    wait(2)
end

local function showMessages()
    for i = 1, #messages do
        fadeIn(i)
        wait(3)
        fadeOut()
        wait(4)
    end
    fadeOutBackground()
end

local function setCamera()
    local newCameraPosition = Vector3.new(14, 21, 85)
    local targetPosition = Vector3.new(20, 21, 300)
    camera.CameraType = Enum.CameraType.Scriptable
    camera.CFrame = CFrame.new(newCameraPosition, targetPosition)
end

local function teleportPlayer()
    local targetPosition = Vector3.new(14, 50, 70)
    local character = player.Character
    if character and character.PrimaryPart then
        character:SetPrimaryPartCFrame(CFrame.new(targetPosition))
    end
end

local function setupImageLabel()
    local imageLabel = Instance.new("ImageLabel", screenGui)
    imageLabel.Image = "rbxassetid://95060402744284"
    imageLabel.AnchorPoint = Vector2.new(0.5, 0.5)
    imageLabel.BackgroundTransparency = 1
    imageLabel.ResetOnSpawn = false
    local initialDistance = Vector3.new(0, 0, 1000)
    local proximityThreshold = 10
    local speed = 0.001
    local maxDistance = 1000
    local maxSize = UDim2.new(0, 1000, 0, 1000)
    local minSize = UDim2.new(0, 10, 0, 10)

    local function updateImageLabel()
        initialDistance = initialDistance:Lerp(camera.CFrame.Position, speed)
        local screenPoint = camera:WorldToViewportPoint(initialDistance)
        if screenPoint.Z > 0 then
            local newPosition = UDim2.new(screenPoint.X / camera.ViewportSize.X, 0, screenPoint.Y / camera.ViewportSize.Y, 0)
            imageLabel.Position = newPosition
            imageLabel.Visible = true
            local distance = (camera.CFrame.Position - initialDistance).Magnitude
            if distance <= proximityThreshold then
                imageLabel.Size = maxSize
            else
                local sizeFactor = math.clamp(1 - (distance / maxDistance), 0, 1)
                imageLabel.Size = minSize:Lerp(maxSize, sizeFactor * sizeFactor)
            end
            if (imageLabel.AbsoluteSize.X >= camera.ViewportSize.X * 0.90) and 
               (imageLabel.AbsoluteSize.Y >= camera.ViewportSize.Y * 0.90) then
                -- Play sound and kick player when the image label gets close
                setupSound()
                player:Kick("                           Caught.")
            end
        end
    end

    RunService.RenderStepped:Connect(updateImageLabel)
end

-- Function to setup and play sound
local function setupSound()
    local sound = Instance.new("Sound")
    sound.SoundId = "rbxassetid://6665010343"
    sound.Looped = true
    sound.Parent = SoundService
    sound.ResetOnSpawn = false
    sound:Play()
end

-- Execute the functions
spawn(showMessages)
delay(5, setCamera)
delay(5, teleportPlayer)
delay(33, setupImageLabel)

-- Play the sound immediately
setupSound()
